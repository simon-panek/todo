{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo-connected.js","components/todo/nav.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Form","id","onSubmit","preventDefault","reset","sendTodo","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","variant","TodoList","list","map","className","complete","toString","key","_id","onClick","handleComplete","text","assignee","todoAPI","ToDo","setList","useEffect","fetch","method","mode","then","data","json","results","catch","console","error","count","setCount","countString","filter","length","document","title","setTitle","titleUpdate","due","Date","cache","headers","body","JSON","stringify","response","savedItem","i","url","listItem","NavBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","href","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.81ddb92b.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './form.scss';\n\n// class TodoForm extends React.Component {\nconst TodoForm = (props) => {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { item: {} };\n  // }\n\n  const [item, setItem] = useState({});\n\n  const handleInputChange = e => {\n    setItem({ ...item, [e.target.name]: e.target.value } );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.sendTodo(item);\n    // const item = {};\n    setItem({});\n  };\n\n  return (\n  <>\n    <Form id=\"form\" onSubmit={handleSubmit}>\n    <h3>Add Item</h3>\n      <Form.Group controlId=\"formGroupEmail\">\n        <Form.Label>To Do Item</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Item Details\" name=\"text\" placeholder=\"Add To Do List Item\" onChange={handleInputChange}/>\n      </Form.Group>\n      <Form.Group controlId=\"formGroupPassword\">\n        <Form.Label>Assigned To</Form.Label>\n        <Form.Control placeholder=\"Assignee Name\" type=\"text\" name=\"assignee\" onChange={handleInputChange}/>\n      </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          {/* <Form.Label>Difficulty Rating</Form.Label> */}\n          <Form.Control type=\"range\" defaultValue=\"1\"  min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange}/>\n        </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n      Add Item\n      </Button>\n      \n    </Form>\n  </>\n  );\n  \n}\n\nexport default TodoForm;\n","import React from 'react';\nimport './list.scss';\n\nconst TodoList = (props) => {\n\n  return (\n    <ul>\n      {props.list.map(item => (\n        <li\n          className={`complete-${item.complete.toString()}`}\n          key={item._id}\n        >\n          <span id=\"listSpan\" onClick={() => props.handleComplete(item._id)}>\n            {item.text} -- {item.assignee}\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n  \n}\n\nexport default TodoList;\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n// import NavBar from './nav';\nimport './todo-connected.scss';\nimport './todo.scss';\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    // console.log('ITEM @ _addItem: ', item);\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item)\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem])\n      })\n      .catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}/${id}`;\n\n      fetch(url, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(item)\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      mode: 'cors',\n    })\n      .then(data => data.json())\n      .then(data => setList(data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n\n  //// useEffect to update list count\n\n  const [count, setCount] = useState([]);\n  const countFunction = () => {\n\n    let countString= `There are ${list.filter(item => !item.complete).length} Items To Complete`\n    setCount(countString);\n  } \n  useEffect(countFunction, [list]);\n\n  const [title, setTitle] = useState(document.title);\n\n  useEffect (() => {\n\n    let titleUpdate= `Todo: ${list.filter(item => !item.complete).length} / Done: ${list.filter(item => item.complete).length}`\n    setTitle(titleUpdate);\n\n    return () => {\n      document.title = titleUpdate;\n    }\n  },[list])\n\n  return (\n    <>\n      <header>\n        <h2 id=\"countH2\">\n          {count}\n          {/* There are {list.filter(item => !item.complete).length} Items To Complete */}\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm sendTodo={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst NavBar = (props) => {\n\n  \n  return (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n    {/* <Navbar.Brand href=\"#home\">To Do</Navbar.Brand> */}\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#home\">Home</Nav.Link>\n        {/* <Nav.Link href=\"#link\">Link</Nav.Link>\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        </NavDropdown> */}\n      </Nav>\n      {/* <Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-success\">Search</Button>\n      </Form> */}\n    </Navbar.Collapse>\n  </Navbar>\n  );\n  \n}\n\nexport default NavBar;","import React from 'react';\n\nimport ToDo from './components/todo/todo-connected.js';\nimport NavBar from './components/todo/nav.js';\n\nconst App = () => {\n  return (\n      <>\n        <NavBar />\n        <ToDo />\n      </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst Main = () => {\n  return <App />;\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}